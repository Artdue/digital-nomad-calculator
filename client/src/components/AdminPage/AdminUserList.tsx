import React, { useEffect, useState } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { getUsers } from '../../Redux/thunks/getUsers';
import { editUser } from '../../Redux/thunks/editUsersList';
import TestPage from './TestPage';

function AdminUserList() {
  const users = useSelector((state) => state.adminUserSlice.users);
  console.log(users);

  const dispatch = useDispatch();
  const [selectedStatus, setSelectedStatus] = useState('');
  const [filteredUsers, setFilteredUsers] = useState(users);

  const [userStatusMap, setUserStatusMap] = useState({});
  const [searchText, setSearchText] = useState('');

  const [oneState, setOneState] = useState();
  const [showModal, setShowModal] = useState(false);
  console.log('üöÄ ', showModal);

  const [modalForUser, setModalForUser] = useState(''); // –ø–æ–∫–∞ –Ω–µ –≤–∞–∂–Ω–æ
  console.log('üöÄ ~ file: AdminUserList.tsx:23 ~ AdminUserList ~ modalForUser:', modalForUser);

  const handleStatusChange = async (id) => {
    try {
      const newStatus = userStatusMap[id] || selectedStatus;
      await dispatch(editUser({ id, data: { document_status: newStatus } }));
      setUserStatusMap((prevState) => ({ ...prevState, [id]: newStatus }));
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞:', error);
    }
  };

  useEffect(() => {
    dispatch(getUsers());
  }, []);

  useEffect(() => {
    if (selectedStatus === '' && searchText === '') {
      setFilteredUsers(users);
    } else {
      const filtered = users.filter((user) => {
        const fullName = `${user.first_name} ${user.last_name} ${user.middle_name}`;
        return (
          (selectedStatus === '' || user.document_status === selectedStatus) &&
          (searchText === '' || fullName.toLowerCase().includes(searchText.toLowerCase()))
        );
      });
      setFilteredUsers(filtered);
    }
  }, [selectedStatus, searchText, users]);

  const openModal = (user) => {
    setModalForUser(user);
    setShowModal(true);
  };
  const closeModal = () => {
    setModalForUser([]);
    setShowModal(false);
  };

  return (
    <>
      <TestPage />
      <div className="py-8 px-4 mx-auto max-w-screen-xl lg:py-16 lg:px-6">
        <div className="flex justify-center mb-6">
          <button
            type="button"
            className="text-gray-900 bg-gradient-to-r from-lime-200 via-lime-400 to-lime-500 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-lime-300 dark:focus:ring-lime-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"
            onClick={() => setSelectedStatus('')}
          >
            –í—Å–µ
          </button>
          <button
            type="button"
            className="text-white font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 bg-gradient-to-br from-pink-400 to-pink-600"
            onClick={() => setSelectedStatus('–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')}
          >
            –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
          </button>
          <button
            type="button"
            className="text-white font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 bg-gradient-to-r from-blue-400 via-blue-500 to-blue-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800"
            onClick={() => setSelectedStatus('–ü–æ–ª—É—á–µ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç—ã')}
          >
            –ü–æ–ª—É—á–µ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç—ã
          </button>
          <button
            type="button"
            className="text-white font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 bg-gradient-to-r from-yellow-400 via-yellow-500 to-yellow-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-yellow-300 dark:focus:ring-yellow-800"
            onClick={() => setSelectedStatus('–ü—Ä–∏–Ω—è—Ç—ã –≤ —Ä–∞–±–æ—Ç—É')}
          >
            –ü—Ä–∏–Ω—è—Ç—ã –≤ —Ä–∞–±–æ—Ç—É
          </button>
          <button
            type="button"
            className="text-white font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 bg-gradient-to-r from-red-400 via-red-500 to-red-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-red-300 dark:focus:ring-red-800"
            onClick={() => setSelectedStatus('–¢—Ä–µ–±—É—é—Ç —É—Ç–æ—á–Ω–µ–Ω–∏—è')}
          >
            –¢—Ä–µ–±—É—é—Ç —É—Ç–æ—á–Ω–µ–Ω–∏—è
          </button>
          <button
            type="button"
            className="text-white font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 bg-gradient-to-r from-green-400 via-green-500 to-green-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-green-300 dark:focus:ring-green-800"
            onClick={() => setSelectedStatus('–ì–æ—Ç–æ–≤–æ')}
          >
            –ì–æ—Ç–æ–≤–æ
          </button>
        </div>
        <input
          type="text"
          className="rounded-lg text-sm px-2 py-1.5 w-full mb-4"
          placeholder="–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏, —Ñ–∞–º–∏–ª–∏–∏ –∏–ª–∏ –æ—Ç—á–µ—Å—Ç–≤—É"
          value={searchText}
          onChange={(event) => setSearchText(event.target.value)}
        />
        {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ */}
        {showModal && (
          // –º–æ–¥–∞–ª–∫–∞
          <div className="flex items-stretch overflow-auto">
            <div className="fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-50 sm:h-[full]  ">
              <div className="bg-white p-4 rounded-md w-[1000px] h-[850px]  ">
                <div className="px-4 sm:px-0 text-center ">
                  <h1 className="text-2xl font-bold leading-7 text-gray-900">–ê–Ω–∫–µ—Ç–∞</h1>
                </div>

                <div className="mr-6 ml-6 mt-4 border-t border-gray-100">
                  <dl className="divide-y divide-gray-100">
                    {' '}
                    <div className="px-4 py-2 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                      <dt className="text-sm font-medium leading-6 text-gray-900 mt-[9px]">–ò–º—è</dt>
                      <dd className=" text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0">
                        <div className="block w-full px-4 py-2 rounded-md border-0 text-gray-900 ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                          {modalForUser.first_name ? (
                            modalForUser.first_name
                          ) : (
                            <div>–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ</div>
                          )}
                        </div>
                      </dd>
                    </div>
                    <div className="px-4 py-2 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                      <dt className="text-sm font-medium leading-6 text-gray-900 mt-[9px]">–û—Ç—á–µ—Å—Ç–≤–æ</dt>
                      <dd className=" text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0">
                        <div className="block w-full px-4 py-2 rounded-md border-0 text-gray-900 ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                          {' '}
                          {modalForUser.middle_name ? (
                            modalForUser.middle_name
                          ) : (
                            <div>–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ</div>
                          )}
                        </div>
                      </dd>
                    </div>
                    <div className="px-4 py-2 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                      <dt className="text-sm font-medium leading-6 text-gray-900 mt-[9px]">–§–∞–º–∏–ª–∏—è</dt>
                      <dd className=" text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0">
                        <div className="block w-full px-4 py-2 rounded-md border-0 text-gray-900 ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                          {' '}
                          {modalForUser.last_name ? (
                            modalForUser.last_name
                          ) : (
                            <div>–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ</div>
                          )}
                        </div>
                      </dd>
                    </div>
                    {/*  */}
                    <div className="px-4 py-2 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                      <dt className="text-sm font-medium leading-6 text-gray-900 mt-[9px]">–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è</dt>
                      <dd className=" text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0">
                        <div className="block w-full px-4 py-2 rounded-md border-0 text-gray-900 ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                          {' '}
                          {modalForUser.birthDate ? (
                            modalForUser.birthDate
                          ) : (
                            <div>–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ</div>
                          )}
                        </div>
                      </dd>
                    </div>{' '}
                    <div className="px-4 py-2 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                      <dt className="text-sm font-medium leading-6 text-gray-900 mt-[9px]">
                        –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                      </dt>
                      <dd className=" text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0">
                        <div className="block w-full px-4 py-2 rounded-md border-0 text-gray-900 ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                          {' '}
                          {modalForUser.phoneNumber ? (
                            modalForUser.phoneNumber
                          ) : (
                            <div>–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ</div>
                          )}
                        </div>
                      </dd>
                    </div>{' '}
                    <div className="px-4 py-2 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                      <dt className="text-sm font-medium leading-6 text-gray-900 mt-[9px]">Email</dt>
                      <dd className=" text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0">
                        <div className="block w-full px-4 py-2 rounded-md border-0 text-gray-900 ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                          {' '}
                          {modalForUser.email ? modalForUser.email : <div>–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ</div>}
                        </div>
                      </dd>
                    </div>{' '}
                    <div className="px-4 py-2 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                      <dt className="text-sm font-medium leading-6 text-gray-900 mt-[9px]">–ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ</dt>
                      <dd className=" text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0">
                        <div className="block w-full px-4 py-2 rounded-md border-0 text-gray-900 ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                          {' '}
                          {modalForUser.citizenship ? (
                            modalForUser.citizenship
                          ) : (
                            <div>–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ</div>
                          )}
                        </div>
                      </dd>
                    </div>{' '}
                    <div className="px-4 py-2 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                      <dt className="text-sm font-medium leading-6 text-gray-900 mt-[9px]">
                        –ß–∏—Å—Ç—ã–π –¥–æ—Ö–æ–¥ –≤ $
                      </dt>
                      <dd className=" text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0">
                        <div className="block w-full px-4 py-2 rounded-md border-0 text-gray-900 ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                          {' '}
                          {modalForUser.income ? modalForUser.income : <div>–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ</div>}
                        </div>
                      </dd>
                    </div>{' '}
                    <div className="px-4 py-2 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                      <dt className="text-sm font-medium leading-6 text-gray-900 mt-[9px]">–í–∏–∑–∞ –∏–ª–∏ –í–ù–ñ</dt>
                      <dd className=" text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0">
                        <div className="block w-full px-4 py-2 rounded-md border-0 text-gray-900 ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                          {' '}
                          {modalForUser.visaType ? modalForUser.visaType : <div>–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ</div>}
                        </div>
                      </dd>
                    </div>
                    <div className="px-4 py-2 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                      <dt className="text-sm font-medium leading-6 text-gray-900 mt-[9px]">
                        –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∏–ª–∏ —Å–µ–º–µ–π–Ω–∞—è –≤–∏–∑–∞
                      </dt>
                      <dd className=" text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0">
                        <div className="block w-full px-4 py-2 rounded-md border-0 text-gray-900 ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                          {' '}
                          {modalForUser.visaShare ? (
                            modalForUser.visaShare
                          ) : (
                            <div>–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ</div>
                          )}
                        </div>
                      </dd>
                    </div>{' '}
                    <div className="px-4 py-2 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                      <dt className="text-sm font-medium leading-6 text-gray-900 mt-[9px]">
                        –ü—Ä–∏–º–µ—Ä–Ω–∞—è –¥–∞—Ç–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–∞ —Ç–µ–∫—É—â—É—é —Ä–∞–±–æ—Ç—É
                      </dt>
                      <dd className=" text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0">
                        <div className="block w-full px-4 py-2 rounded-md border-0 text-gray-900 ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                          {' '}
                          {modalForUser.work_date ? (
                            modalForUser.work_date
                          ) : (
                            <div>–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ</div>
                          )}
                        </div>
                        <div className="text-sm font-medium leading-6 text-gray-900 mt-2">
                          –ú–µ—Å—è—Ü–µ–≤ –Ω–∞ —Ç–µ–∫—É—â–µ–π —Ä–∞–±–æ—Ç–µ:{' '}
                          {modalForUser.work_exp ? modalForUser.work_exp : <div>0</div>}
                        </div>
                      </dd>
                    </div>
                    {/* –∫–Ω–æ–ø–∫–∞ */}
                    <div className="m-2 pt-4 flex justify-center ">
                      <button
                        onClick={closeModal}
                        className="text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-purple-300 dark:focus:ring-purple-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-6 "
                      >
                        –ó–∞–∫—Ä—ã—Ç—å
                      </button>
                    </div>
                  </dl>
                </div>
              </div>
            </div>
          </div>
        )}
        <div className="grid grid-cols-1 gap-8 xl:gap-12 md:grid-cols-3">
          {filteredUsers.length ? (
            filteredUsers.map((user) => (
              <div key={user.id} className="flex items-stretch">
                <section className="bg-white dark:bg-gray-900">
                  <div className="w-full">
                    <div className="p-8 space-y-3 border-2 border-blue-400 dark:border-blue-300 rounded-xl h-full flex flex-col">
                      <h1 className="text-xl font-semibold text-gray-700 capitalize dark:text-white">
                        {user.first_name} {user.last_name} {user.middle_name}
                      </h1>
                      <p className="text-gray-500 dark:text-gray-300">Email: {user.email}</p>
                      <button
                        type="button"
                        className="mt-4 px-2 py-1 bg-green-500 text-white rounded-md hover:bg-indigo-600 text-sm"
                        onClick={() => openModal(user)}
                      >
                        –ê–Ω–∫–µ—Ç–∞
                      </button>
                      {/* <p className="text-gray-500 dark:text-gray-300">–ü–∞—Å–ø–æ—Ä—Ç: {user.passport}</p>
                      <p className="text-gray-500 dark:text-gray-300">
                        –í—ã–ø–∏—Å–∫–∞ –∏–∑ –ë–∞–Ω–∫–∞: {user.balance}
                      </p>
                      <p className="text-gray-500 dark:text-gray-300">
                        B—ã–ø–∏—Å–∫–∞ c —Ä–∞–±–æ—Ç—ã: {user.balance}
                      </p> */}
                      {/* <button className="btn btn-primary resume-btn" onClick={() => window.open(`http://localhost:3000${user.passport}`, '_blank')}>–ü–∞—Å–ø–æ—Ä—Ç</button>
                      <button className="btn btn-primary resume-btn" onClick={() => window.open(`http://localhost:3000${user.balance}`, '_blank')}>–í—ã–ø–∏—Å–∫–∞ –∏–∑ –ë–∞–Ω–∫–∞</button>
                      <button className="btn btn-primary resume-btn" onClick={() => window.open(`http://localhost:3000${user.lease}`, '_blank')}>–°–ø—Ä–∞–≤–∫–∞ –æ —Ä–∞–±–æ—Ç–µ</button>  */}
                      <div className="document-buttons">
                        {user.passport ? (
                          <div>
                            <button
                              className="btn btn-primary resume-btn"
                              onClick={() =>
                                window.open(`http://localhost:3000${user.passport}`, '_blank')
                              }
                            >
                              –ü–∞—Å–ø–æ—Ä—Ç
                            </button>
                            <br />
                          </div>
                        ) : (
                          <div className="text-gray-500 dark:text-gray-300">–ü–∞—Å–ø–æ—Ä—Ç: –Ω–µ—Ç</div>
                        )}

                        {user.balance ? (
                          <div>
                            <button
                              className="btn btn-primary resume-btn"
                              onClick={() =>
                                window.open(`http://localhost:3000${user.balance}`, '_blank')
                              }
                            >
                              –í—ã–ø–∏—Å–∫–∞ –∏–∑ –ë–∞–Ω–∫–∞
                            </button>
                            <br />
                          </div>
                        ) : (
                          <div className="text-gray-500 dark:text-gray-300">
                            –í—ã–ø–∏—Å–∫–∞ –∏–∑ –ë–∞–Ω–∫–∞: –Ω–µ—Ç
                          </div>
                        )}

                        {user.lease ? (
                          <div>
                            <button
                              className="btn btn-primary resume-btn"
                              onClick={() =>
                                window.open(`http://localhost:3000${user.lease}`, '_blank')
                              }
                            >
                              –°–ø—Ä–∞–≤–∫–∞ –æ —Ä–∞–±–æ—Ç–µ
                            </button>
                            <br />
                          </div>
                        ) : (
                          <div className="text-gray-500 dark:text-gray-300">
                            –°–ø—Ä–∞–≤–∫–∞ –æ —Ä–∞–±–æ—Ç–µ: –Ω–µ—Ç
                          </div>
                        )}
                      </div>

                      <p className="text-gray-500 dark:text-gray-300">
                        –¢–µ–ª–µ—Ñ–æ–Ω: {user.phoneNumber}
                      </p>
                      <p className="text-gray-500 dark:text-gray-300">–î–æ–∫—É–º–µ–Ω—Ç—ã:</p>
                      <select
                        className="rounded-lg text-sm px-2 py-1.5 w-full"
                        value={userStatusMap[user.id] || user.document_status}
                        onChange={(event) => {
                          const { value } = event.target;
                          setUserStatusMap((prevState) => ({ ...prevState, [user.id]: value }));
                        }}
                      >
                        <option value={null}>–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</option>
                        <option value="–ü–æ–ª—É—á–µ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç—ã">–ü–æ–ª—É—á–µ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç—ã</option>
                        <option value="–ü—Ä–∏–Ω—è—Ç—ã –≤ —Ä–∞–±–æ—Ç—É">–ü—Ä–∏–Ω—è—Ç—ã –≤ —Ä–∞–±–æ—Ç—É</option>
                        <option value="–¢—Ä–µ–±—É—é—Ç —É—Ç–æ—á–Ω–µ–Ω–∏—è">–¢—Ä–µ–±—É—é—Ç —É—Ç–æ—á–Ω–µ–Ω–∏—è</option>
                        <option value="–ì–æ—Ç–æ–≤–æ">–ì–æ—Ç–æ–≤–æ</option>
                      </select>
                      <div className="mt-auto">
                        <button
                          type="button"
                          className="text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-purple-300 dark:focus:ring-purple-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"
                        >
                          –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ
                        </button>
                        <button
                          onClick={() => handleStatusChange(user.id)}
                          className="text-white bg-gradient-to-r from-pink-400 via-pink-500 to-pink-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-pink-300 dark:focus:ring-pink-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"
                        >
                          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                        </button>
                        {/* <button
                        type="button"
                        className="mt-4 px-2 py-1 bg-green-500 text-white rounded-md hover:bg-indigo-600 text-sm"
                        onClick={() => openModal(user)}
                      >
                        –ê–Ω–∫–µ—Ç–∞ –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                      </button> */}
                      </div>
                    </div>
                  </div>
                </section>
              </div>
            ))
          ) : (
            <span>–ù–µ—Ç –Æ–∑–µ—Ä–æ–≤</span>
          )}
        </div>{' '}
      </div>
    </>
  );
}

export default AdminUserList;
